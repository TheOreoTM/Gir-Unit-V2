{"version":3,"sources":["../../../src/lib/types/Enums.ts"],"names":["CooldownLevel","PluginHook","BucketScope","RegisterBehavior","InternalRegistryAPIType"],"mappings":";AAAO,IAAK,gBAAL,kBAAKA,mBAAL;AACN,EAAAA,eAAA,YAAS;AACT,EAAAA,eAAA,aAAU;AACV,EAAAA,eAAA,WAAQ;AAHG,SAAAA;AAAA,GAAA;AAML,IAAK,aAAL,kBAAKC,gBAAL;AACN,EAAAA,YAAA,+BAA4B;AAC5B,EAAAA,YAAA,uBAAoB;AACpB,EAAAA,YAAA,wBAAqB;AACrB,EAAAA,YAAA,cAAW;AACX,EAAAA,YAAA,eAAY;AALD,SAAAA;AAAA,GAAA;AAWL,IAAK,cAAL,kBAAKC,iBAAL;AAIN,EAAAA,0BAAA;AAIA,EAAAA,0BAAA;AAIA,EAAAA,0BAAA;AAIA,EAAAA,0BAAA;AAhBW,SAAAA;AAAA,GAAA;AAmBL,IAAK,mBAAL,kBAAKC,sBAAL;AACN,EAAAA,kBAAA,eAAY;AACZ,EAAAA,kBAAA,kBAAe;AAOf,EAAAA,kBAAA,sBAAmB;AAYnB,EAAAA,kBAAA,mBAAgB;AArBL,SAAAA;AAAA,GAAA;AAwBL,IAAK,0BAAL,kBAAKC,6BAAL;AACN,EAAAA,kDAAA;AACA,EAAAA,kDAAA;AAFW,SAAAA;AAAA,GAAA","sourcesContent":["export enum CooldownLevel {\n\tAuthor = 'author',\n\tChannel = 'channel',\n\tGuild = 'guild'\n}\n\nexport enum PluginHook {\n\tPreGenericsInitialization = 'preGenericsInitialization',\n\tPreInitialization = 'preInitialization',\n\tPostInitialization = 'postInitialization',\n\tPreLogin = 'preLogin',\n\tPostLogin = 'postLogin'\n}\n\n/**\n * The scope the cooldown applies to.\n */\nexport enum BucketScope {\n\t/**\n\t * Per channel cooldowns.\n\t */\n\tChannel,\n\t/**\n\t * Global cooldowns.\n\t */\n\tGlobal,\n\t/**\n\t * Per guild cooldowns.\n\t */\n\tGuild,\n\t/**\n\t * Per user cooldowns.\n\t */\n\tUser\n}\n\nexport enum RegisterBehavior {\n\tOverwrite = 'OVERWRITE',\n\tLogToConsole = 'LOG_TO_CONSOLE',\n\t/**\n\t * Finds all differences in the commands provided using our internal computation method, and logs them to the console, while applying them.\n\t *\n\t * @danger This can potentially cause slowdowns when booting up your bot as computing differences on big commands can take a while.\n\t * We recommend you use `OVERWRITE` instead in production.\n\t */\n\tVerboseOverwrite = 'VERBOSE_OVERWRITE',\n\t/**\n\t * Makes Sapphire handle all command registrations, removals, and updates for you.\n\t *\n\t * This mode can only be set as the **default** behavior, and cannot be set per-command.\n\t *\n\t * In this mode:\n\t * - any `idHints` set per-command are no longer respected, and can be omitted.\n\t * - any `behaviorWhenNotIdentical` that are set per-command are no longer respected, and can be omitted.\n\t * - any application commands that are *not* registered through Sapphire's {@link ApplicationCommandRegistry} are removed from the application.\n\t * \t- the same applies for guild commands, but only for guilds that are registered in the registry via `guildIds`.\n\t */\n\tBulkOverwrite = 'BULK_OVERWRITE'\n}\n\nexport enum InternalRegistryAPIType {\n\tChatInput,\n\tContextMenu\n}\n"]}