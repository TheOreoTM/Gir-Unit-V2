"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MessagePrompterReactionStrategy = void 0;
const MessagePrompterBaseStrategy_1 = require("./MessagePrompterBaseStrategy");
class MessagePrompterReactionStrategy extends MessagePrompterBaseStrategy_1.MessagePrompterBaseStrategy {
    /**
     * Constructor for the {@link MessagePrompterReactionStrategy} class
     * @param messagePrompter The used instance of {@link MessagePrompter}
     * @param options Overrideable options if needed.
     */
    constructor(message, options) {
        super('reactions', message, options);
        /**
         * The emojis used
         */
        Object.defineProperty(this, "reactions", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.reactions = options?.reactions;
    }
    /**
     * This executes the {@link MessagePrompterReactionStrategy} and sends the message.
     * The handler will wait for one (1) reaction.
     * @param channel The channel to use.
     * @param authorOrFilter An author object to validate or a {@linkplain https://discord.js.org/#/docs/main/stable/typedef/CollectorFilter CollectorFilter} predicate callback.
     * @returns A promise that resolves to the reaction object.
     */
    async run(channel, authorOrFilter) {
        if (!this.reactions?.length)
            throw new TypeError('There are no reactions provided.');
        const response = await this.collectReactions(channel, authorOrFilter, this.reactions);
        return this.explicitReturn ? response : response.reaction ?? response;
    }
}
exports.MessagePrompterReactionStrategy = MessagePrompterReactionStrategy;
//# sourceMappingURL=MessagePrompterReactionStrategy.js.map